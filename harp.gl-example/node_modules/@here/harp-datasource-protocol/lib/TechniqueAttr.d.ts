import { Env, Expr, MapEnv, Value } from "./Expr";
export interface AttrEvaluationContext {
    /**
     * Expression evaluation environment containing variable bindings.
     */
    env: MapEnv;
    /**
     * Optional, cache of expression results.
     *
     * @see [[Expr.evaluate]]
     */
    cachedExprResults?: Map<Expr, Value>;
}
/**
 * Evaluate feature attr _without_ default value.
 *
 * @returns actual value or `undefined`
 */
export declare function evaluateTechniqueAttr<T = Value>(context: Env | AttrEvaluationContext, attrValue: T | Expr | undefined): T | undefined;
/**
 * Evaluate feature attr _with_ default value.
 *
 * @returns actual value or `defaultValue`
 */
export declare function evaluateTechniqueAttr<T extends Value>(context: Env | AttrEvaluationContext, attrValue: T | Expr | undefined, defaultValue: T): T;
//# sourceMappingURL=TechniqueAttr.d.ts.map