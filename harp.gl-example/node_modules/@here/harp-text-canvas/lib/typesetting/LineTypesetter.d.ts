import { Typesetter, TypesettingParameters } from "./Typesetter";
/**
 * [[Typesetter]] implementation that handles multi-line complex layout text.
 */
export declare class LineTypesetter implements Typesetter {
    private readonly m_tempTransform;
    private readonly m_tempCorners;
    private m_tempLineDirection;
    private m_tempRunDirection;
    private m_tempPixelSize;
    private m_tempPixelBgSize;
    private m_tempScale;
    private m_tempSmallCaps;
    private m_currentParams?;
    /**
     * Creates a `LineTypesetter` object.
     *
     * @returns New `LineTypesetter`.
     */
    constructor();
    /**
     * Arranges the specified glyphs using this `LineTypesetter`. Text will be placed into multiple
     * bidirectional lines, that will be generated taking into account [[textLayoutStyle]] features,
     * such as:
     * - Maximum line width.
     * - Word and character wrapping.
     * - Maximum number of lines.
     * - Vertical and horizontal alignment.
     * - Leading (spacing between lines).
     *
     * @param params - Typesetting parameters.
     *
     * @returns If `false`, some error occurred during execution and the output should be dismissed.
     */
    arrangeGlyphs(params: TypesettingParameters): boolean;
    private placeLine;
    private placeRun;
}
//# sourceMappingURL=LineTypesetter.d.ts.map