import * as THREE from "three";
import { GlyphData } from "./GlyphData";
import { TextLayoutStyle, TextRenderStyle } from "./TextStyle";
/**
 * Object containing vertex buffer data generated by [[TextCanvas]].
 */
export declare class TextBufferObject {
    readonly glyphs: GlyphData[];
    readonly buffer: Float32Array;
    readonly bounds?: THREE.Box2 | undefined;
    readonly characterBounds?: THREE.Box2[] | undefined;
    readonly textRenderStyle?: TextRenderStyle | undefined;
    readonly textLayoutStyle?: TextLayoutStyle | undefined;
    /**
     * Constructs a new `TextBufferObject`.
     *
     * @param glyphs - Input glyphs.
     * @param buffer - Buffer containing the data generated by [[TextCanvas]].
     * @param bounds - Optional text bounds.
     * @param characterBounds - Optional character bounds.
     * @param textRenderStyle - [[TextRenderStyle]] applied by [[TextCanvas]].
     * @param textLayoutStyle - [[TextLayoutStyle]] applied by [[TextCanvas]].
     *
     * @returns New `TextBufferObject`.
     */
    constructor(glyphs: GlyphData[], buffer: Float32Array, bounds?: THREE.Box2 | undefined, characterBounds?: THREE.Box2[] | undefined, textRenderStyle?: TextRenderStyle | undefined, textLayoutStyle?: TextLayoutStyle | undefined);
}
//# sourceMappingURL=TextBufferObject.d.ts.map