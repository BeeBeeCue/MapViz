import { MapEnv } from "@here/harp-datasource-protocol";
import { Object3D, Vector3 } from "three";
import { Tile } from "./Tile";
/**
 * All objects in fallback tiles are reduced by this amount.
 *
 * @internal
 */
export declare const FALLBACK_RENDER_ORDER_OFFSET = 20000;
export declare class TileObjectRenderer {
    private readonly m_env;
    private readonly m_renderOrderStencilValues;
    private m_stencilValue;
    constructor(m_env: MapEnv);
    render(tile: Tile, zoomLevel: number, cameraPosition: Vector3, rootNode: Object3D): void;
    prepareRender(): void;
    private updateStencilRef;
    private allocateStencilValue;
    private getStencilValue;
    private adjustRenderOrderForFallback;
    /**
     * Process dynamic updates of [[TileObject]]'s style.
     *
     * @returns `true` if object shall be used in scene, `false` otherwise
     */
    private processTileObject;
    /**
     * Process the features owned by the given [[TileObject]].
     *
     * @param tile - The {@link Tile} owning the [[TileObject]]'s features.
     * @param object - The [[TileObject]] to process.
     * @returns `false` if the given [[TileObject]] should not be added to the scene.
     */
    private processTileObjectFeatures;
}
//# sourceMappingURL=TileObjectsRenderer.d.ts.map