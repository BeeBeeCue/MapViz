import { LineMarkerTechnique, PoiTechnique, TextTechnique, Theme } from "@here/harp-datasource-protocol";
import { TextCanvas, TextLayoutParameters, TextLayoutStyle, TextRenderParameters, TextRenderStyle } from "@here/harp-text-canvas";
import { PoiRenderer } from "../poi/PoiRenderer";
import { Tile } from "../Tile";
import { TextCanvasRenderer } from "./TextCanvasRenderer";
/**
 * {@link TextElementsRenderer} representation of a
 * {@link @here/harp-datasource-protocol#Theme}'s TextStyle.
 */
export interface TextElementStyle {
    name: string;
    fontCatalog: string;
    renderParams: TextRenderParameters;
    layoutParams: TextLayoutParameters;
    textCanvas?: TextCanvas;
    poiRenderer?: PoiRenderer;
}
export declare class TextStyleCache {
    private m_theme;
    private readonly m_textStyles;
    private m_defaultStyle;
    constructor(m_theme: Theme);
    initializeDefaultTextElementStyle(defaultFontCatalogName: string): void;
    initializeTextElementStyles(defaultPoiRenderer: PoiRenderer, defaultTextCanvas: TextCanvas, textRenderers: TextCanvasRenderer[]): void;
    /**
     * Retrieves a {@link TextElementStyle} for {@link @here/harp-datasource-protocol#Theme}'s
     * [[TextStyle]] id.
     */
    getTextElementStyle(styleId?: string): TextElementStyle;
    /**
     * Gets the appropriate {@link @here/harp-text-canvas#TextRenderStyle}
     * to use for a label. Depends heavily on the label's
     * [[Technique]] and the current zoomLevel.
     */
    createRenderStyle(tile: Tile, technique: TextTechnique | PoiTechnique | LineMarkerTechnique): TextRenderStyle;
    /**
     * Create the appropriate {@link @here/harp-text-canvas#TextLayoutStyle}
     * to use for a label. Depends heavily on the label's
     * [[Technique]] and the current zoomLevel.
     *
     * @param tile - The {@link Tile} to process.
     * @param technique - Label's technique.
     */
    createLayoutStyle(tile: Tile, technique: TextTechnique | PoiTechnique | LineMarkerTechnique): TextLayoutStyle;
    private createTextElementStyle;
}
//# sourceMappingURL=TextStyleCache.d.ts.map