import { HighPrecisionLineMaterial } from "@here/harp-materials";
import * as THREE from "three";
/**
 * Declare interface for `HighPrecisionObject` which describes additional functionality to render
 * high-precision vertices.
 */
export interface HighPrecisionObject extends THREE.Object3D {
    /**
     * Allow direct access to [[BufferGeometry]] without cast.
     */
    bufferGeometry: THREE.BufferGeometry;
    /**
     * Allow direct access to [[ShaderMaterial]] without cast.
     */
    shaderMaterial: THREE.ShaderMaterial;
    /**
     * Inversed World Matrix.
     */
    matrixWorldInverse: THREE.Matrix4;
    /**
     * Sets up attributes for position (one attribute for major 32 bits position "halve", and one
     * attribute for lower 32 bits).
     */
    setPositions(positions: number[] | THREE.Vector3[]): void;
    /**
     * Prepare the objects "`onBeforeRender()`" callback to generate proper high-precision camera
     * position.
     */
    setupForRendering(): void;
}
/**
 * Class used to render high-precision wireframe lines.
 */
export declare class HighPrecisionWireFrameLine extends THREE.Line implements HighPrecisionObject {
    matrixWorldInverse: THREE.Matrix4;
    /**
     * Creates a `HighPrecisionWireFrameLine` object.
     *
     * @param geometry - [[BufferGeometry]] used to render this object.
     * @param material - [[HighPrecisionLineMaterial]] used to render this object.
     * @param positions - Array of 2D/3D positions.
     */
    constructor(geometry: THREE.BufferGeometry, material: HighPrecisionLineMaterial, positions?: number[] | THREE.Vector3[]);
    get bufferGeometry(): THREE.BufferGeometry;
    get shaderMaterial(): THREE.ShaderMaterial;
    setPositions(positions: number[] | THREE.Vector3[]): void;
    setupForRendering(): void;
    updateMatrixWorld(force: boolean): void;
}
/**
 * Class used to render high-precision lines.
 */
export declare class HighPrecisionLine extends THREE.Mesh implements HighPrecisionObject {
    matrixWorldInverse: THREE.Matrix4;
    /**
     * Creates a `HighPrecisionLine` object.
     *
     * @param geometry - [[BufferGeometry]] used to render this object.
     * @param material - [[HighPrecisionLineMaterial]] used to render this object.
     * @param positions - Array of 2D/3D positions.
     */
    constructor(geometry: THREE.BufferGeometry, material: HighPrecisionLineMaterial, positions?: number[] | THREE.Vector3[]);
    get bufferGeometry(): THREE.BufferGeometry;
    get shaderMaterial(): THREE.ShaderMaterial;
    setPositions(positions: number[] | THREE.Vector3[]): void;
    setupForRendering(): void;
    updateMatrixWorld(force: boolean): void;
}
//# sourceMappingURL=HighPrecisionLines.d.ts.map