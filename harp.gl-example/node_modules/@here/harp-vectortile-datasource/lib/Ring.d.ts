import { Vector2 } from "three";
/**
 * A class representing a ring of a polygon geometry.
 */
export declare class Ring {
    readonly points: Vector2[];
    readonly textureCoords?: Vector2[] | undefined;
    readonly extents: number;
    readonly clippedPointIndices?: Set<number> | undefined;
    /**
     * Returns a `Set` containing the indices of the elements
     * of `clippedPoints` that are clipped (not included in `originalPoints`).
     *
     * @param clippedPoints `Array` of clipped positions.
     * @param originalPoints `Array` of unclipped positions.
     */
    static computeClippedPointIndices(clippedPoints: Vector2[], originalPoints: Vector2[]): Set<number>;
    /**
     * The signed area of this `Ring`.
     *
     * @remarks
     * The sign of the area depends on the projection and the axis orientation
     * of the ring coordinates.
     */
    readonly area: number;
    /**
     * The winding of this `Ring`.
     *
     * @remarks
     * Derived from the sign of the `area` of this Ring.
     */
    readonly winding: boolean;
    /**
     * The vertex stride.
     */
    readonly vertexStride: number;
    /**
     * Creates a new `Ring`.
     *
     * @param points The coordinates of the rings.
     * @param textureCoords The optional `Array` of texture coordinates.
     * @param extents The extents of the tile bounds.
     * @param clippedPointIndices Optional `Set` containing the indices of the clipped points.
     */
    constructor(points: Vector2[], textureCoords?: Vector2[] | undefined, extents?: number, clippedPointIndices?: Set<number> | undefined);
    /**
     * Returns a flattened `Array` containing the position and texture coordinates of this `Ring`.
     *
     * @param array The target `Array`.
     * @param offset Optional offset into the array.
     */
    toArray(array?: number[], offset?: number): number[];
    /**
     * Tests if the edge connecting the vertex at `index` with
     * the vertex at `index+1` should be connected by a line
     * when stroking the polygon.
     *
     * @param index The index of the first vertex of the outline edge.
     */
    isProperEdge(index: number): boolean;
}
//# sourceMappingURL=Ring.d.ts.map