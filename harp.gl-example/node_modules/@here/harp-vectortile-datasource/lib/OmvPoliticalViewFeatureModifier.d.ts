import { MapEnv } from "@here/harp-datasource-protocol/index-decoder";
import { OmvFeatureModifier } from "./OmvDataFilter";
/**
 * Modifies the MapEnv of the Vector Tiles in Tilezen format with different POV.
 *
 * This feature modifier updates feature properties according to different political
 * point of view.
 * Political views (or alternate point of views) are supported in Tilezen by adding
 * country posix (lower-case ISO 3166-1 alpha-2 compliant) to __default__ property name.
 * For example country borders (__boundaries__ layer) may have both __kind__ property for
 * default (commonly accepted point of view) and __kind:xx__ for alternate points of view.
 * This way disputed borders may be visible or not for certain regions and different
 * users (clients).
 *
 * @hidden
 */
export declare class OmvPoliticalViewFeatureModifier implements OmvFeatureModifier {
    private readonly m_countryCode;
    /**
     * C-tor.
     *
     * @param pov - The code of the country (in lower-case ISO 3166-1 alpha-2 format) which
     * point of view should be taken into account.
     */
    constructor(pov: string);
    /**
     * Simply passes all points to rendering, points features does not support PoliticalView.
     *
     * @param layer - Current layer.
     * @param env - Properties of point feature.
     * @param level - Level of tile.
     * @returns always `true` to pass feature.
     */
    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;
    /**
     * Implements line features processing changing "kind" attribute depending on point of view.
     *
     * Currently only line features support different point of view.
     * @param layer - The name of the layer.
     * @param env - The environment to use.
     * @returns always `true` to pass lines for rendering.
     */
    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;
    /**
     * Simply pass all polygons to rendering, this feature does not support PoliticalView yet.
     *
     * @param layer - Current layer.
     * @param env - Properties of polygon feature.
     * @param level - Level of tile.
     * @returns `true` to pass feature.
     */
    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;
    /**
     * Rewrites the Environment to match the different points of view.
     *
     * @param layer - The layer name.
     * @param env - The environment to use.
     */
    private rewriteEnvironment;
    private updateEnvironment;
    private getAlternativePov;
    private isPoliticalViewLayer;
}
//# sourceMappingURL=OmvPoliticalViewFeatureModifier.d.ts.map