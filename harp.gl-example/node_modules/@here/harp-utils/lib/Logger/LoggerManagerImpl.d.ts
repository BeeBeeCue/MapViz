import { IChannel } from "./IChannel";
import { ILogger, LoggerOptions, LogLevel } from "./ILogger";
import { ILoggerManager } from "./ILoggerManager";
/**
 * LoggerManagerImpl is the class for the singleton instance of the logger manager.
 * It handles channels and loggers.
 */
export declare class LoggerManagerImpl implements ILoggerManager {
    channel: IChannel;
    private readonly m_loggers;
    private m_levelSetForAll?;
    constructor();
    getLoggerNames(): string[];
    getLogger(name: string): ILogger | undefined;
    create(loggerName: string, options?: LoggerOptions): ILogger;
    dispose(logger: ILogger): void;
    updateAll(options: LoggerOptions): void;
    update(loggerName: string, config: LoggerOptions): void;
    enableAll(enabled: boolean): void;
    enable(loggerName: string, value: boolean): void;
    setLogLevelForAll(level: LogLevel): void;
    setLogLevel(loggerName: string, level: LogLevel): void;
    setChannel(channel: IChannel): void;
}
//# sourceMappingURL=LoggerManagerImpl.d.ts.map