/**
 * Custom, app-specific URI resolver interface.
 */
export interface UriResolver {
    /**
     * Attempt to resolve `URI` to `URL`.
     *
     * If given resolver doesn't know about this specific kind of `URI`, it should return string as
     * received.
     *
     * @param input - `URI`
     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`
     */
    resolveUri(uri: string): string;
}
export interface PrefixUriResolverDefinition {
    [prefix: string]: string;
}
/**
 * Basic, import-map like {@link UriResolver}.
 *
 * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.
 *
 * In definitions, `key` is matched against input uri with following strategy:
 *  - `key` without trailing `/` -> `key` and input `uri` must be identical
 *  - `key` with trailing `/`, -> `key` is treated as "package prefix", so `uri` must start with
 *    `key`
 *
 * Example:
 * ```
 * {
 *     "local://poiMasterList": "/assets/poiMasterList.json"
 *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`
 *     "local://icons/": "/assets/icons/"
 *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to
 *        // `/assets/icons/ANYPATH
 * }
 * ```
 * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).
 */
export declare class PrefixMapUriResolver implements UriResolver {
    readonly definitions: PrefixUriResolverDefinition;
    constructor(definitions: PrefixUriResolverDefinition);
    resolveUri(uri: string): string;
}
/**
 * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.
 */
export declare class RelativeUriResolver implements UriResolver {
    readonly parentUri: string;
    constructor(parentUri: string);
    resolveUri(uri: string): string;
}
/**
 * Compose URI resolvers.
 *
 * Creates new {@link UriResolver} that applies resolvers in orders or arguments.
 *
 * Example:
 *
 *     const themeUrl = ...; // url of parent object
 *     const childUrlResolver = composeUrlResolvers(
 *           new RelativeUriResolver(themeUrl),
 *           defaultUrlResolver
 *     );
 */
export declare function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver;
//# sourceMappingURL=UriResolver.d.ts.map