import * as THREE from "three";
/**
 * Parameters used when constructing a new {@link HighPrecisionPointMaterial}.
 */
export interface HighPrecisionPointMaterialParameters extends THREE.PointsMaterialParameters {
    /**
     * Point color.
     */
    color?: number | string | THREE.Color;
    /**
     * Point opacity.
     */
    opacity?: number;
    /**
     * Point scale.
     */
    scale?: number;
    /**
     * UV transformation matrix.
     */
    uvTransform?: THREE.Matrix3;
}
/**
 * Material designed to render high precision points (ideal for position-sensible data).
 */
export declare class HighPrecisionPointMaterial extends THREE.PointsMaterial {
    static DEFAULT_COLOR: number;
    static DEFAULT_OPACITY: number;
    static DEFAULT_SIZE: number;
    static DEFAULT_SCALE: number;
    isHighPrecisionPointMaterial: boolean;
    uniforms: {
        [uniform: string]: THREE.IUniform;
    };
    vertexShader?: string;
    fragmentShader?: string;
    /**
     * Constructs a new `HighPrecisionPointMaterial`.
     *
     * @param params - `HighPrecisionPointMaterial` parameters.
     */
    constructor(params?: HighPrecisionPointMaterialParameters);
    /**
     *  Point scale.
     */
    get scale(): number;
    set scale(value: number);
    /**
     * UV transformation matrix.
     */
    get uvTransform(): THREE.Matrix3;
    set uvTransform(value: THREE.Matrix3);
}
export declare function isHighPrecisionPointMaterial(material: object | undefined): material is HighPrecisionPointMaterial;
//# sourceMappingURL=HighPrecisionPointMaterial.d.ts.map