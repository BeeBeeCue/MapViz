import { GeoPolygon, Projection } from "@here/harp-geoutils";
import { PerspectiveCamera } from "three";
/**
 * Generates Bounds for a camera view and a projection
 *
 * @beta, @internal
 */
export declare class BoundsGenerator {
    private readonly m_camera;
    private m_projection;
    tileWrappingEnabled: boolean;
    private readonly m_groundPlaneNormal;
    private readonly m_groundPlane;
    constructor(m_camera: PerspectiveCamera, m_projection: Projection, tileWrappingEnabled?: boolean);
    set projection(projection: Projection);
    /**
     * Generates an Array of GeoCoordinates covering the visible map.
     * The coordinates are sorted to ccw winding, so a polygon could be drawn with them.
     */
    generate(): GeoPolygon | undefined;
    private createPolygon;
    private addSideSegmentSubdivisionsOnSphere;
    private addSideIntersectionsOnSphere;
    private findBoundsIntersectionsOnSphere;
    private wrapAroundPoles;
    private generateOnSphere;
    private generateOnPlane;
    private getWorldConers;
    private addNDCRayIntersection;
    private addHorizonIntersection;
    private addCanvasCornerIntersection;
    private validateAndAddToGeoPolygon;
    private isInVisibleMap;
    private addPointInFrustum;
    private addFrustumIntersection;
    private getVerticalHorizonPositionInNDC;
}
//# sourceMappingURL=BoundsGenerator.d.ts.map