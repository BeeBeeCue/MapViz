import { LookAtParams, MapView } from "@here/harp-mapview";
import { CameraKeyTrackAnimationOptions, ControlPoint } from "./CameraKeyTrackAnimation";
/**
 * A Utility class for the creation of Camera Animations
 * @beta
 */
export declare class CameraAnimationBuilder {
    /**
     * Get the current [[LookAtParams]] from [[MapView]]
     * @beta
     *
     * @param mapView - The MapView
     */
    static getLookAtFromView(mapView: MapView): Pick<LookAtParams, "target" | "tilt" | "heading" | "distance">;
    /**
     * Appends a [[ControlPoint]] to [[CameraKeyTrackAnimationOptions]]
     * @beta
     *
     * @param options - The [[CameraKeyTrackAnimationOptions]] that the [[ControlPoint]] should be
     * appended to
     * @param point - The [[ControlPoint]] to append.
     * @param appendTime - The time it should take from the former end of the animation to the
     * appended [[ControlPoint]] in seconds, per default takes the controlpoints timestamp
     */
    static appendControlPoint(options: CameraKeyTrackAnimationOptions, point: ControlPoint, appendTime?: number): void;
    /**
     * Adds a [[ControlPoint]] to the beginning of an [[CameraKeyTrackAnimationOptions]]
     * @beta
     *
     * @param options -
     * @param point -
     * @param prependTime - The time the animation from the inserted key to the next should take,
     *  in seconds, @default 10 seconds
     */
    static prependControlPoint(options: CameraKeyTrackAnimationOptions, point: ControlPoint, prependTime?: number): void;
    /**
     *
     * Creates Options for a Bow Animation from the start to the target [[ControlPoint]]
     * @beta
     *
     * @param mapView -
     * @param startControlPoint -
     * @param targetControlPoint -
     * @param altitude - The maximal altitude the bow should have, defaults to twice the start to
     * target distance
     * @param duration - The duration of the Animation in seconds, @default 10
     */
    static createBowFlyToOptions(mapView: MapView, startControlPoint: ControlPoint, targetControlPoint: ControlPoint, altitude?: number, duration?: number): CameraKeyTrackAnimationOptions;
    /**
     * Creates [[CameraKeyTrackAnimationOptions]] for an Orbit Animation
     * @beta
     *
     * @param startControlPoint -
     * @param duration -
     */
    static createOrbitOptions(startControlPoint: ControlPoint, duration?: number): CameraKeyTrackAnimationOptions;
}
//# sourceMappingURL=CameraAnimationBuilder.d.ts.map