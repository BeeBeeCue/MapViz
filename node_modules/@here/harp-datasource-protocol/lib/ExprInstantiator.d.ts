import { Env } from "./Env";
import { BooleanLiteralExpr, CallExpr, CaseExpr, Expr, ExprVisitor, HasAttributeExpr, InterpolateExpr, MatchExpr, NullLiteralExpr, NumberLiteralExpr, ObjectLiteralExpr, StepExpr, StringLiteralExpr, VarExpr } from "./Expr";
export interface InstantiationContext {
    /**
     * The {@link Env} used to lookup for names.
     */
    env: Env;
    /**
     * The names to preserve during the instantiation.
     */
    preserve?: Set<string>;
}
/**
 * @hidden
 */
export declare class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {
    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr;
    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr;
    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr;
    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr;
    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr;
    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr;
    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr;
    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr;
    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr;
    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr;
    visitStepExpr(expr: StepExpr, context: InstantiationContext): Expr;
    visitInterpolateExpr(expr: InterpolateExpr, context: InstantiationContext): Expr;
}
//# sourceMappingURL=ExprInstantiator.d.ts.map