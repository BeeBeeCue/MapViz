import { HighPrecisionPointMaterial } from "@here/harp-materials";
import * as THREE from "three";
import { HighPrecisionObject } from "./HighPrecisionLines";
/**
 * Class used to render high-precision points.
 */
export declare class HighPrecisionPoints extends THREE.Points implements HighPrecisionObject {
    matrixWorldInverse: THREE.Matrix4;
    /**
     * Number of dimensions this `HighPrecisionObject` is specified in (2D/3D).
     */
    dimensionality?: number;
    /**
     * Creates a `HighPrecisionPoints` object.
     *
     * @param geometry - [[BufferGeometry]] used to render this object.
     * @param material - [[HighPrecisionLineMaterial]] used to render this object.
     *     instances.
     * @param positions - Array of 2D/3D positions.
     * @param color - Color of the rendered point.
     * @param opacity - Opacity of the rendered point.
     */
    constructor(geometry?: THREE.BufferGeometry, material?: HighPrecisionPointMaterial, positions?: number[] | THREE.Vector3[], color?: THREE.Color, opacity?: number);
    get bufferGeometry(): THREE.BufferGeometry;
    /**
     * Clears the [[BufferGeometry]] used to render this point.
     */
    clearGeometry(): THREE.BufferGeometry;
    get shaderMaterial(): THREE.ShaderMaterial;
    setPositions(positions: number[] | THREE.Vector3[]): void;
    setupForRendering(): void;
    updateMatrixWorld(force: boolean): void;
}
//# sourceMappingURL=HighPrecisionPoints.d.ts.map