import { GeoBox, Projection } from "@here/harp-geoutils";
import { Vector3 } from "three";
import { SubdivisionModifier } from "./SubdivisionModifier";
export declare enum SubdivisionMode {
    /**
     * Subdivide all edges
     */
    All = 0,
    /**
     * Only subdivide horizontal and vertical edges
     */
    NoDiagonals = 1
}
/**
 * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on
 * length of edges.
 */
export declare class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {
    readonly subdivision: number;
    readonly geoBox: GeoBox;
    readonly subdivisionMode: SubdivisionMode;
    readonly projection: Projection;
    private readonly m_projectedBox;
    private readonly m_maxLength;
    private readonly m_maxLengthX;
    private readonly m_maxLengthY;
    /**
     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].
     *
     * @param subdivision - The subdivision factor
     * @param geoBox - The geo bounding box of a tile
     * @param subdivisionMode - Configures what edges to divide
     * @param projection - The projection that defines the world space of this geometry.
     */
    constructor(subdivision: number, geoBox: GeoBox, subdivisionMode: SubdivisionMode, projection: Projection);
    /**
     * Return upper bound for length of diagonal edges
     */
    get maxLength(): number;
    /**
     * Return upper bound for edge length in x direction
     */
    get maxLengthX(): number;
    /**
     * Return upper bound for edge length in y direction
     */
    get maxLengthY(): number;
    /** @override */
    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;
    private shouldSplitEdge;
}
//# sourceMappingURL=EdgeLengthGeometrySubdivisionModifier.d.ts.map