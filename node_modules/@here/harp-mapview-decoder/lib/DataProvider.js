"use strict";
/*
 * Copyright (C) 2017-2020 HERE Europe B.V.
 * Licensed under Apache 2.0, see full license in LICENSE
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataProvider = void 0;
require("@here/harp-fetch");
const three_1 = require("three");
/**
 * Interface for all `DataProvider` subclasses.
 *
 * @remarks
 * The `DataProvider` is an abstraction of the tile
 * loader which is only responsible for loading the data of a specific tile,
 * without any relation to displaying or even decoding the data.
 */
class DataProvider extends three_1.EventDispatcher {
    constructor() {
        super(...arguments);
        this.m_clients = new Set();
    }
    /**
     * Registers a client to the data provider.
     *
     * @param client - The client to register.
     * @returns Promise to wait for successful (or failed) connection to the data source.
     */
    register(client) {
        const result = this.m_clients.size === 0 ? this.connect() : Promise.resolve();
        this.m_clients.add(client);
        return result;
    }
    /**
     * Unregisters a client from the data provider.
     *
     * @param client - The client to unregister.
     */
    unregister(client) {
        if (this.m_clients.delete(client) && this.m_clients.size === 0) {
            this.dispose();
        }
    }
}
exports.DataProvider = DataProvider;
//# sourceMappingURL=DataProvider.js.map